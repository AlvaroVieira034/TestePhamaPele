-- Script de Criação das Tabelas, Generators e Triggers para o Sistema de Delivery de Farmácia
-- Banco de Dados: Firebird

-- Criação dos Generators (Sequences) para auto-incremento dos IDs
CREATE SEQUENCE GEN_CLIENTE_ID;
CREATE SEQUENCE GEN_PRODUTO_ID;
CREATE SEQUENCE GEN_PEDIDO_ID;
CREATE SEQUENCE GEN_PEDIDO_ITENS_ID;
CREATE SEQUENCE GEN_ENTREGADOR_ID;
CREATE SEQUENCE GEN_TIPO_PRODUTO_ID;
CREATE SEQUENCE GEN_ID_ENTREGA;

-- Tabela TIPO_PRODUTO
CREATE TABLE TIPO_PRODUTO (
    ID_TIPO_PRODUTO INTEGER NOT NULL PRIMARY KEY,
    DESCRICAO VARCHAR(50) NOT NULL
);

-- Trigger para auto-incremento do ID_TIPO_PRODUTO
CREATE TRIGGER BI_TIPO_PRODUTO_ID FOR TIPO_PRODUTO
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    IF (NEW.ID_TIPO_PRODUTO IS NULL) THEN
        NEW.ID_TIPO_PRODUTO = NEXT VALUE FOR GEN_TIPO_PRODUTO_ID;
END;

-- Inserção dos tipos de produtos iniciais
INSERT INTO TIPO_PRODUTO (DESCRICAO) VALUES ('COMUM');
INSERT INTO TIPO_PRODUTO (DESCRICAO) VALUES ('CONTROLADO');
INSERT INTO TIPO_PRODUTO (DESCRICAO) VALUES ('SENSÍVEL');
INSERT INTO TIPO_PRODUTO (DESCRICAO) VALUES ('COSMÉTICO');
INSERT INTO TIPO_PRODUTO (DESCRICAO) VALUES ('PERECÍVEL');
INSERT INTO TIPO_PRODUTO (DESCRICAO) VALUES ('NÃO PERECÍVEL');

-- Tabela CLIENTE
CREATE TABLE CLIENTE (
    ID_CLIENTE INTEGER NOT NULL PRIMARY KEY,
    NOME VARCHAR(100) NOT NULL,
    ENDERECO VARCHAR(200) NOT NULL,
    BAIRRO VARCHAR(100) NOT NULL,
    CIDADE VARCHAR(100) NOT NULL,
    ESTADO VARCHAR(2) NOT NULL,
    CEP VARCHAR(10) NOT NULL,
    TELEFONE VARCHAR(15),
    EMAIL VARCHAR(100)
);

-- Trigger para auto-incremento do ID_CLIENTE
CREATE TRIGGER BI_CLIENTE_ID FOR CLIENTE
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    IF (NEW.ID_CLIENTE IS NULL) THEN
        NEW.ID_CLIENTE = NEXT VALUE FOR GEN_CLIENTE_ID;
END;

-- Inserção de clientes
insert into cliente (nome, cep, endereco, bairro, cidade, estado, telefone, email) values
('ALVARO VIEIRA', '34004-645', 'RUA MANOEL MOREIRA DA SILVA, 70/202', 'PAU POMBO', 'NOVA LIMA', 'MG', '31 97103-1390', 'amvalvaro@gmail.com');

insert into cliente (nome, cep, endereco, bairro, cidade, estado, telefone, email) values
('PEDRO DOS SANTOS', '34002-123', 'ALAMEDA DAS TAMAREIRAS 36', 'OURO VELHO', 'NOVA LIMA', 'MG', '31 98577-1234', 'pedrosantos@gmail.com');

insert into cliente (nome, cep, endereco, bairro, cidade, estado, telefone, email) values
('MARIA CRISTINA DIAS', '30112-010', 'RUA ANTONIO DE ALBUQUERQUE 377 - SALA 6', 'FUNCIONARIOS', 'BELO HORIZONTE', 'MG', '31 97534-1010', 'mcdias@gmail.com');

insert into cliente (nome, cep, endereco, bairro, cidade, estado, telefone, email) values
('ANA GODOY', '50810-420', 'RUA AMOROSO COSTA 87', 'VARZEA', 'RECIFE', 'PE', '81 3271-4420', 'anagodoy@hotmail.com');

insert into cliente (nome, cep, endereco, bairro, cidade, estado, telefone, email) values
('JOICE AMORIM', '34224-123', 'RUA MENEIRO JOAO DE PAULA MENDES 35', 'CABECEIRAS', 'NOVA LIMA', 'MG', '31 85511-5744', 'jamorim@gmail.com');

-- Tabela PRODUTO
CREATE TABLE PRODUTO (
    ID_PRODUTO INTEGER NOT NULL PRIMARY KEY,
    NOME VARCHAR(100) NOT NULL,
    CODIGO VARCHAR(20) NOT NULL,
    QUANTIDADE VARCHAR(50) NOT NULL,
    DATA_VALIDADE DATE,
    ID_TIPO_PRODUTO INTEGER NOT NULL,
    CONDICOES_ARMAZENAMENTO VARCHAR(200),
    REQUER_PRESCRICAO CHAR(1) DEFAULT 'N',
    VALOR FLOAT, -- Vírgula adicionada aqui
    FOREIGN KEY (ID_TIPO_PRODUTO) REFERENCES TIPO_PRODUTO(ID_TIPO_PRODUTO)
);

-- Trigger para auto-incremento do ID_PRODUTO
CREATE TRIGGER BI_PRODUTO_ID FOR PRODUTO
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    IF (NEW.ID_PRODUTO IS NULL) THEN
        NEW.ID_PRODUTO = NEXT VALUE FOR GEN_PRODUTO_ID;
END;

-- Inserção de produtos
INSERT INTO PRODUTO (NOME, CODIGO, QUANTIDADE, DATA_VALIDADE, ID_TIPO_PRODUTO, CONDICOES_ARMAZENAMENTO, REQUER_PRESCRICAO)
VALUES ('PARACETAMOL', 'MED001', '50 UNIDADES', '2024-06-30', 1, NULL, 'N');

INSERT INTO PRODUTO (NOME, CODIGO, QUANTIDADE, DATA_VALIDADE, ID_TIPO_PRODUTO, CONDICOES_ARMAZENAMENTO, REQUER_PRESCRICAO)
VALUES ('DIPIRONA', 'MED002', '30 UNIDADES', '2023-12-15', 1, NULL, 'N');

-- Inserção de Medicamentos Controlados
INSERT INTO PRODUTO (NOME, CODIGO, QUANTIDADE, DATA_VALIDADE, ID_TIPO_PRODUTO, CONDICOES_ARMAZENAMENTO, REQUER_PRESCRICAO)
VALUES ('RIVOTRIL', 'MED003', '10 UNIDADES', '2023-09-20', 2, NULL, 'S');

INSERT INTO PRODUTO (NOME, CODIGO, QUANTIDADE, DATA_VALIDADE, ID_TIPO_PRODUTO, CONDICOES_ARMAZENAMENTO, REQUER_PRESCRICAO)
VALUES ('RITALINA', 'MED004', '20 UNIDADES', '2024-03-31', 2, NULL, 'S');

-- Inserção de Medicamentos Sensíveis
INSERT INTO PRODUTO (NOME, CODIGO, QUANTIDADE, DATA_VALIDADE, ID_TIPO_PRODUTO, CONDICOES_ARMAZENAMENTO, REQUER_PRESCRICAO)
VALUES ('INSULINA', 'MED005', '5 FRASCOS', '2023-10-31', 3, 'Refrigerado entre 2°C e 8°C', 'N');

INSERT INTO PRODUTO (NOME, CODIGO, QUANTIDADE, DATA_VALIDADE, ID_TIPO_PRODUTO, CONDICOES_ARMAZENAMENTO, REQUER_PRESCRICAO)
VALUES ('VACINA DA COVID-19', 'MED006', '50 DOSES', '2023-11-30', 3, 'Congelado a -20°C', 'N');

-- Inserção de Cosméticos
INSERT INTO PRODUTO (NOME, CODIGO, QUANTIDADE, DATA_VALIDADE, ID_TIPO_PRODUTO, CONDICOES_ARMAZENAMENTO, REQUER_PRESCRICAO)
VALUES ('CREME HIDRATANTE', 'COS001', '20 UNIDADES', '2024-02-28', 4, NULL, 'N');

INSERT INTO PRODUTO (NOME, CODIGO, QUANTIDADE, DATA_VALIDADE, ID_TIPO_PRODUTO, CONDICOES_ARMAZENAMENTO, REQUER_PRESCRICAO)
VALUES ('PERFUME FEMININO', 'COS002', '15 UNIDADES', '2025-06-30', 4, NULL, 'N');

-- Inserção de Produtos Gerais Perecíveis
INSERT INTO PRODUTO (NOME, CODIGO, QUANTIDADE, DATA_VALIDADE, ID_TIPO_PRODUTO, CONDICOES_ARMAZENAMENTO, REQUER_PRESCRICAO)
VALUES ('SUPLEMENTO DE COLÁGENO', 'PER001', '30 UNIDADES', '2023-08-31', 5, NULL, 'N');

INSERT INTO PRODUTO (NOME, CODIGO, QUANTIDADE, DATA_VALIDADE, ID_TIPO_PRODUTO, CONDICOES_ARMAZENAMENTO, REQUER_PRESCRICAO)
VALUES ('LEITE INFANTIL', 'PER002', '25 UNIDADES', '2023-10-15', 5, NULL, 'N');

-- Inserção de Produtos Gerais Não Perecíveis
INSERT INTO PRODUTO (NOME, CODIGO, QUANTIDADE, DATA_VALIDADE, ID_TIPO_PRODUTO, CONDICOES_ARMAZENAMENTO, REQUER_PRESCRICAO)
VALUES ('PASTA DE DENTE', 'NPER001', '50 UNIDADES', NULL, 6, NULL, 'N');

INSERT INTO PRODUTO (NOME, CODIGO, QUANTIDADE, DATA_VALIDADE, ID_TIPO_PRODUTO, CONDICOES_ARMAZENAMENTO, REQUER_PRESCRICAO)
VALUES ('SHAMPOO', 'NPER002', '40 UNIDADES', NULL, 6, NULL, 'N');

-- Tabela PEDIDO
CREATE TABLE PEDIDO (
    ID_PEDIDO INTEGER NOT NULL PRIMARY KEY,
    ID_CLIENTE INTEGER NOT NULL,
    DATA_PEDIDO DATE NOT NULL,
    VALOR_PEDIDO FLOAT NOT NULL,
    STATUS_ENTREGA INTEGER NOT NULL,
    PRIORIDADE INTEGER NOT NULL,
    FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE)
);

-- Trigger para auto-incremento do ID_PEDIDO
CREATE TRIGGER BI_PEDIDO_ID FOR PEDIDO
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    IF (NEW.ID_PEDIDO IS NULL) THEN
        NEW.ID_PEDIDO = NEXT VALUE FOR GEN_PEDIDO_ID;
END;

-- Tabela PEDIDO_ITENS
CREATE TABLE PEDIDO_ITENS (
    ID_PEDIDO_ITENS INTEGER NOT NULL PRIMARY KEY,
    ID_PEDIDO INTEGER NOT NULL,
    ID_PRODUTO INTEGER NOT NULL,
    QUANTIDADE INTEGER NOT NULL,
    VALOR_UNITARIO FLOAT,
    VALOR_ITEM FLOAT,
    REQUER_PRESCRICAO CHAR(1),
    CONDICOES_ARMAZENAMENTO VARCHAR(200),
    FOREIGN KEY (ID_PEDIDO) REFERENCES PEDIDO(ID_PEDIDO),
    FOREIGN KEY (ID_PRODUTO) REFERENCES PRODUTO(ID_PRODUTO)
);

-- Trigger para auto-incremento do ID_PEDIDO_ITENS
CREATE TRIGGER BI_PEDIDO_ITENS_ID FOR PEDIDO_ITENS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    IF (NEW.ID_PEDIDO_ITENS IS NULL) THEN
        NEW.ID_PEDIDO_ITENS = NEXT VALUE FOR GEN_PEDIDO_ITENS_ID;
END;

-- Tabela ENTREGADOR
CREATE TABLE ENTREGADOR (
    ID_ENTREGADOR INTEGER NOT NULL PRIMARY KEY,
    NOME VARCHAR(100) NOT NULL,
    VEICULO VARCHAR(50) NOT NULL,
    PLACA VARCHAR(10) NOT NULL,
    TELEFONE VARCHAR(15) NOT NULL
);

-- Trigger para auto-incremento do ID_ENTREGADOR
CREATE TRIGGER BI_ENTREGADOR_ID FOR ENTREGADOR
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    IF (NEW.ID_ENTREGADOR IS NULL) THEN
        NEW.ID_ENTREGADOR = NEXT VALUE FOR GEN_ENTREGADOR_ID;
END;

-- Inserção de entregadores
insert into entregador (nome, veiculo, placa, telefone) values ('JOSE CARLOS DOS SANTOS', 'FIORINO BAU', 'HHH-1234', '31 9715-1212');
insert into entregador (nome, veiculo, placa, telefone) values ('PEDRO CARVALHO DIAS', 'MOTOCICLETA COM BAU', 'KJY-4321', '31 98865-2020');

-- Tabela ENTREGA
CREATE TABLE ENTREGA (
    ID_ENTREGA INTEGER NOT NULL PRIMARY KEY,
    ID_PEDIDO INTEGER NOT NULL,
    ID_CLIENTE INTEGER NOT NULL,
    ID_ENTREGADOR INTEGER NOT NULL,
    DATA_PEDIDO DATE,
    VALOR_PEDIDO FLOAT NOT NULL,
    DATA_ENTREGA DATE,
    OBSERVACOES VARCHAR(500),
    PRIORIDADE INTEGER NOT NULL,
    FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE),
    FOREIGN KEY (ID_ENTREGADOR) REFERENCES ENTREGADOR(ID_ENTREGADOR),
    FOREIGN KEY (ID_PEDIDO) REFERENCES PEDIDO(ID_PEDIDO)
);

-- Trigger para auto-incremento do ID_ENTREGA
CREATE OR ALTER TRIGGER BI_ENTREGA_ID FOR ENTREGA
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    IF (NEW.ID_ENTREGA IS NULL OR NEW.ID_ENTREGA = 0) THEN
        NEW.ID_ENTREGA = NEXT VALUE FOR GEN_ID_ENTREGA;
END;

-- Fim do Script


